name: $(Date:yyyyMMdd)
trigger:
  branches:
    include:
    - develop
  paths:
    include:
    - router/openwrt_pkgs/saw/*
    - router/*
    exclude:
    - router/openwrt_pkgs/*
pr:
  autoCancel: true
  branches:
    include:
    - develop
  paths:
    include:
    - router/openwrt_pkgs/saw/*
    - router/*
    exclude:
    - router/openwrt_pkgs/*
pool:
  vmImage: ubuntu-16.04

variables:
- group: env-prod
- group: bintray-credentials-ds
- name: address
  value: '0xb13797EF857335F9d34C083b22543fAA8dc6bbd7'
# Workaround for bug in FileTransform Task not picking up dynamic variables
- name: abi
  value: 'oops... something went wrong'

steps:
- task: Docker@1
  displayName: 'Compile Smart Contract'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: 'Daniel-DockerHub'
    command: run
    runInBackground: false
    imageName: ethereum/solc:0.5.2-alpine
    volumes:  |
      $(Build.SourcesDirectory)/smart_contracts:/contracts
    containerCommand: '--abi /contracts/saw_contract.sol -o /contracts'

- script: echo "##vso[task.setvariable variable=abi]$(cat $(Build.SourcesDirectory)/smart_contracts/SawWallet.abi)"
  displayName: 'Cache generated ABI'


- task: FileTransform@1
  displayName: 'Assemble Smart Contract JSON'
  inputs:
    fileType: json
    folderPath: $(Build.SourcesDirectory)/router/openwrt_pkgs/saw/files/etc/saw
    targetFiles: 'saw_contract.json'

- bash: 'mkdir -p $(Build.SourcesDirectory)/router/src/grpc && chmod 777 $(Build.SourcesDirectory)/router/src/grpc'
  displayName: 'Create directory for generated gRPC protobuf files'

- task: Docker@1
  displayName: 'Generate gRPC Service Stubs from protobuf files'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: 'Daniel-DockerHub'
    command: run
    runInBackground: false
    imageName: saw1/build-protobuf:latest
    volumes:  |
      $(Build.SourcesDirectory)/protobuf:/protobuf
      $(Build.SourcesDirectory)/router/src/grpc:/dist

- task: NodeTool@0
  displayName: 'Install Node.js'
  inputs:
    versionSpec: '11.x' 
    checkLatest: true

- script: 'npm install'
  displayName: 'Install NPM Packages'
  workingDirectory: $(Build.SourcesDirectory)/router

- script: tsc
  displayName: 'Compile TypeScript Source'
  workingDirectory: $(Build.SourcesDirectory)/router

- task: CopyFiles@2
  displayName: 'Copy package.json'
  inputs:
    sourceFolder: $(Build.SourcesDirectory)/router/
    contents: 'package.json' 
    targetFolder: $(Build.SourcesDirectory)/router/build

- task: PublishPipelineArtifact@0
  displayName: 'Publish artifact for release pipeline'
  inputs:
    artifactName: saw-service
    targetPath: $(Build.SourcesDirectory)/router/build
